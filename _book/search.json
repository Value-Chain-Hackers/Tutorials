[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Tutorials and Tools",
    "section": "",
    "text": "Preface\nIn the world of logistics and serious game development, we often find ourselves juggling complexity and creativity. Here’s where OpenWebUI comes in—our trusty tool to bring order and insight to that delightful chaos.\nWe’re not going to bother with installation today (you’re clever enough to have that sorted!). Instead, let’s jump straight into what matters most: How to use OpenWebUI to get things done.\nThis book is your guide to mastering OpenWebUI, built step by step, with a focus on practical usage. Whether you’re optimizing logistics routes or crafting engaging in-game interactions, you’ll find ways to streamline your processes, automate tasks, and make your work both efficient and fun.\nReady? Breathe, get comfortable, and let’s embark on this journey together. It’s going to be an exciting ride.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "Welcome to the world of OpenWebUI, where creativity meets efficiency! Whether you’re a Serious Game Developer or a Logistics Researcher, OpenWebUI is your new secret weapon. It allows you to build smart agents that automate complex tasks, freeing you to focus on innovation and strategy.\nBut this isn’t just about creating bots. It’s about crafting intelligent assistants that help streamline your workflow, optimize processes, and reduce the repetitive, mundane tasks that often bog us down. Imagine a team of digital helpers at your disposal, handling everything from resource management in your games to route optimization in logistics.\n\n1.0.1 Who Is This Book For?\nThis book is designed for Serious Game Developers and Logistics and Supply Chain Researchers—fields that demand innovative, flexible solutions. Whether you’re designing interactive NPCs for your latest game or testing complex logistics scenarios, OpenWebUI offers a set of tools to make your job easier and more efficient.\nHere’s what you’ll learn:\n\nHow to set up and configure your agents.\nHow to create custom workflows for both game development and logistics.\nHow to test and refine your agents to make them more responsive and capable.\nHow to integrate OpenWebUI into your daily processes for seamless automation.\n\n\n\n1.0.2 Why OpenWebUI?\nOpenWebUI is a modular, flexible platform that grows with your needs. Whether you’re working on a small game prototype or managing a massive supply chain, this tool adapts to your projects. The best part? You don’t need to be a coding expert to get started. OpenWebUI makes it easy for you to spend less time wrestling with the tech and more time doing what matters most: creating, optimizing, and innovating.\nReminder: This book focuses solely on usage. You won’t find long installation guides here—we assume you’re ready to dive straight into the good stuff!\nLet’s get started. By the end of this book, you’ll have the skills to build agents that work for you, leaving you more time for creativity and strategic thinking. Ready? Let’s dive in!\nSee Knuth (1984) for additional discussion of literate programming.\n\n\n\n\nKnuth, Donald E. 1984. “Literate Programming.” Comput. J. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "interface.html",
    "href": "interface.html",
    "title": "2  The Interface: Your Dashboard of Possibilities",
    "section": "",
    "text": "2.0.1 The Left Panel: Your Workspace and Navigation Hub\nThe left panel organizes your active and archived agent interactions. This section allows you to quickly move between different agent conversations and manage templates.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>The Interface: Your Dashboard of Possibilities</span>"
    ]
  },
  {
    "objectID": "interface.html#system-prompt",
    "href": "interface.html#system-prompt",
    "title": "2  The Interface: Your Dashboard of Possibilities",
    "section": "2.1 System Prompt",
    "text": "2.1 System Prompt\nThe System Prompt is the initial instruction or context that guides the agent’s overall behavior. It sets the tone for the agent’s interactions and is one of the most critical settings.\n\nExample: \"You are a logistics optimization agent. Your goal is to minimize delivery time by adjusting routes based on real-time traffic data.\"\nEffect: This ensures the agent’s responses stay focused on optimizing routes. Changing the system prompt to include more detailed instructions, such as considering fuel efficiency or avoiding toll roads, will shift the agent’s decision-making process.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>The Interface: Your Dashboard of Possibilities</span>"
    ]
  },
  {
    "objectID": "interface.html#temperature",
    "href": "interface.html#temperature",
    "title": "2  The Interface: Your Dashboard of Possibilities",
    "section": "2.2 Temperature",
    "text": "2.2 Temperature\nTemperature controls the randomness or creativity of the agent’s responses. It affects how likely the agent is to deviate from predictable answers.\n\nRange: 0.0 to 1.0\n\nA lower value (closer to 0.0) makes the agent more deterministic, meaning it will choose the most predictable and straightforward responses.\nA higher value (closer to 1.0) increases the variability in responses, allowing the agent to explore less obvious possibilities.\n\nExample:\n\nAt 0.2, the agent will give highly predictable and consistent answers. Ideal for tasks like logistics optimization where precision is key.\nAt 0.8, the agent will provide more creative, varied responses, useful when testing dynamic NPC dialogue in games or brainstorming creative solutions.\n\n\nEffect: Higher temperatures introduce more randomness. For a logistics agent, using a high temperature could lead to more unconventional route suggestions, which might not always be optimal. Lowering the temperature ensures the agent sticks to tried-and-tested routes.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>The Interface: Your Dashboard of Possibilities</span>"
    ]
  },
  {
    "objectID": "interface.html#top-k",
    "href": "interface.html#top-k",
    "title": "2  The Interface: Your Dashboard of Possibilities",
    "section": "2.3 Top K",
    "text": "2.3 Top K\nTop K limits how many options the agent considers at each step of its response generation. It controls how wide the agent’s “vocabulary” is during interactions.\n\nRange: 1 to infinity (higher values mean more possible words to choose from)\n\nA lower value (e.g., 10) restricts the agent to a smaller, more focused set of choices.\nA higher value (e.g., 50) allows the agent to consider a broader range of possible next words or actions.\n\nExample:\n\nSet Top K to 10 for a logistics agent. This ensures the agent sticks to the most reliable, often-used routes.\nSet Top K to 100 for an NPC in a game to allow for more varied dialogue options, creating a more dynamic conversation.\n\n\nEffect: Lower Top K values make the agent more predictable by narrowing its choices. In logistics, a low Top K ensures the agent only considers the most efficient routes. Higher Top K values allow the agent to explore more creative options, useful in contexts where variety is desirable.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>The Interface: Your Dashboard of Possibilities</span>"
    ]
  },
  {
    "objectID": "interface.html#top-p",
    "href": "interface.html#top-p",
    "title": "2  The Interface: Your Dashboard of Possibilities",
    "section": "2.4 Top P",
    "text": "2.4 Top P\nTop P (nucleus sampling) controls how the agent selects from the top P% of most likely responses. This method can reduce reliance on overly common responses.\n\nRange: 0.0 to 1.0\n\nA lower value (e.g., 0.1) means the agent will only select from the top 10% of the most likely responses.\nA higher value (e.g., 0.9) allows the agent to consider a much broader range of responses.\n\nExample:\n\nTop P of 0.1 forces the agent to choose the safest, most common responses. Great for logistics where efficiency and reliability are key.\nTop P of 0.8 allows for more variability, letting the agent experiment with routes or responses outside the norm.\n\n\nEffect: Lower Top P values restrict the agent to the safest options, which works well for practical applications like logistics. In creative tasks, like generating dialogue for NPCs, a higher Top P value might produce more interesting and varied results.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>The Interface: Your Dashboard of Possibilities</span>"
    ]
  },
  {
    "objectID": "interface.html#frequency-penalty",
    "href": "interface.html#frequency-penalty",
    "title": "2  The Interface: Your Dashboard of Possibilities",
    "section": "2.5 Frequency Penalty",
    "text": "2.5 Frequency Penalty\nFrequency Penalty controls how much the agent penalizes words or phrases that it has already used. This prevents repetitive responses and encourages more varied output.\n\nRange: 0.0 to 2.0\n\nA higher value (e.g., 1.5) makes the agent less likely to repeat words, encouraging it to find new ways of responding.\nA lower value (e.g., 0.2) allows the agent to repeat words more freely.\n\nExample:\n\nSet Frequency Penalty to 1.2 for an NPC agent to avoid repetitive dialogue in-game conversations.\nSet Frequency Penalty to 0.5 for a logistics agent, so it can repeat key terms like route names or instructions if necessary for clarity.\n\n\nEffect: A higher penalty is useful in creative tasks to avoid repetitive answers, like generating dynamic NPC dialogue. In logistics or similar applications, setting a lower penalty ensures that important details (like road names) are repeated when necessary.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>The Interface: Your Dashboard of Possibilities</span>"
    ]
  },
  {
    "objectID": "interface.html#max-tokens",
    "href": "interface.html#max-tokens",
    "title": "2  The Interface: Your Dashboard of Possibilities",
    "section": "2.6 Max Tokens",
    "text": "2.6 Max Tokens\nMax Tokens limits how long the agent’s responses can be by setting a cap on the number of tokens (which typically represent words or parts of words).\n\nRange: Any positive integer\n\nA lower value (e.g., 50) ensures the agent’s responses are short and concise.\nA higher value (e.g., 200) allows for more detailed and elaborate responses.\n\nExample:\n\nSet Max Tokens to 100 for logistics tasks to ensure the agent provides concise but detailed route recommendations.\nSet Max Tokens to 150 for NPC agents in games to allow for more detailed explanations or conversations.\n\n\nEffect: A lower Max Tokens value ensures responses remain short and focused, useful for tasks where brevity is important, like logistics. Higher values allow for longer, more elaborate explanations, great for creative writing or character dialogue.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>The Interface: Your Dashboard of Possibilities</span>"
    ]
  },
  {
    "objectID": "interface.html#mirostat-eta-and-tau",
    "href": "interface.html#mirostat-eta-and-tau",
    "title": "2  The Interface: Your Dashboard of Possibilities",
    "section": "2.7 Mirostat (Eta and Tau)",
    "text": "2.7 Mirostat (Eta and Tau)\nMirostat is an advanced control mechanism that adjusts creativity in real-time as the agent generates text.\n\nEta: Controls how aggressive the adjustment is.\n\nHigher values mean more aggressive changes in creativity.\n\nTau: The target perplexity, or how unpredictable the agent should be.\nExample:\n\nSet Mirostat Eta to 1.0 and Mirostat Tau to 5 for a logistics agent to keep its responses stable and predictable.\nIncrease Tau for an NPC agent in a game to make dialogue more varied and unpredictable.\n\n\nEffect: Mirostat helps fine-tune the unpredictability in long conversations. In logistics, using a low Tau ensures the agent stays consistent over longer interactions, while a higher Tau in a game allows for more dynamic and evolving conversations.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>The Interface: Your Dashboard of Possibilities</span>"
    ]
  },
  {
    "objectID": "interface.html#use-of-advanced-parameters-in-specific-scenarios",
    "href": "interface.html#use-of-advanced-parameters-in-specific-scenarios",
    "title": "2  The Interface: Your Dashboard of Possibilities",
    "section": "2.8 Use of Advanced Parameters in Specific Scenarios",
    "text": "2.8 Use of Advanced Parameters in Specific Scenarios\n\n2.8.1 Logistics Use Case:\n\nSystem Prompt: \"Optimize delivery routes with minimal delays, considering traffic and package urgency.\"\nTemperature: Set to 0.4 for stable and predictable results.\nTop K: Set to 20 to limit route options to the most common choices.\nMax Tokens: Set to 100 to keep the responses concise.\n\n\n\n2.8.2 Game NPC Use Case:\n\nSystem Prompt: \"You are a game character. Respond to player questions with wit and humor.\"\nTemperature: Set to 0.8 for more creative and spontaneous replies.\nFrequency Penalty: Increase to 1.5 to avoid repetition in dialogue.\nMax Tokens: Set to 150 for more in-depth interactions.\n\n\n2.8.2.1 Example: Fine-Tuning a Logistics Agent\nLet’s say you have an agent designed to optimize delivery routes, and you want to adjust how it prioritizes efficiency.\n\nSystem Prompt: In the System Prompt field, type:\n\n\"Prioritize optimizing delivery routes based on shortest time while considering real-time traffic delays.\"\n\nTemperature: Set the Temperature to 0.5. This will make the agent’s responses balanced—not too random but still adaptable to complex routing decisions.\nTop K & Top P: Set Top K to 50 and Top P to 0.9 to allow the agent to consider a wide range of potential routes while still being focused on the most likely options.\nMax Tokens: Set Max Tokens to 150 to keep the responses concise but still detailed enough for logistics decisions.\nFrequency Penalty: Increase the Frequency Penalty to 0.6 to ensure the agent avoids repeating similar route suggestions over and over.\n\n\n\n\n\n2.8.3 The Center: Interacting with Agents in Real-Time\nThe center panel is where you have direct conversations with your agents. This panel is where the agent’s responses appear, and you can issue new commands or monitor task progress.\n\n2.8.3.1 Example: Running Your Configured Agent\nAfter adjusting the settings on the right panel, it’s time to see the results in the center panel.\n\nIn the center panel, type:\n\"Optimize delivery routes for trucks in the downtown area, considering current traffic conditions.\"\nPress Enter and observe the agent’s response, which should consider your new system prompt and settings.\nSimulate a traffic delay by typing:\n\"There is a traffic jam on Main Street. Recalculate delivery routes.\"\nThe agent will adjust the routes in real-time, providing alternative suggestions based on the adjusted parameters like Temperature and Top K.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>The Interface: Your Dashboard of Possibilities</span>"
    ]
  },
  {
    "objectID": "agents.html",
    "href": "agents.html",
    "title": "3  Crafting Your First Agent: Getting Started with Bots",
    "section": "",
    "text": "3.1 1. Models\nThe Models tab is where you can create, modify, and manage AI models. It supports: - Model creation, editing, and fine-tuning - Integration with external APIs (Ollama, OpenAI) - Attaching documents and tools to models - Model tagging, cloning, and sharing - Adjustable model parameters (e.g., temperature, seed)",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Crafting Your First Agent: Getting Started with Bots</span>"
    ]
  },
  {
    "objectID": "agents.html#prompts",
    "href": "agents.html#prompts",
    "title": "3  Crafting Your First Agent: Getting Started with Bots",
    "section": "3.2 2. Prompts",
    "text": "3.2 2. Prompts\nThe Prompts tab allows for the management and customization of predefined prompts, making interactions with models more efficient. This includes: - Creating and storing prompt presets - Utilizing dynamic variables in prompts (e.g., date, user name) - Setting up system prompts for specific interactions",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Crafting Your First Agent: Getting Started with Bots</span>"
    ]
  },
  {
    "objectID": "agents.html#documents",
    "href": "agents.html#documents",
    "title": "3  Crafting Your First Agent: Getting Started with Bots",
    "section": "3.3 3. Documents",
    "text": "3.3 3. Documents\nThe Documents tab is primarily used for integrating knowledge sources with models. You can: - Upload documents for reference in conversations - Use document-based queries via the RAG (Retrieval Augmented Generation) feature - Organize and manage document sources for quick access",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Crafting Your First Agent: Getting Started with Bots</span>"
    ]
  },
  {
    "objectID": "agents.html#tools",
    "href": "agents.html#tools",
    "title": "3  Crafting Your First Agent: Getting Started with Bots",
    "section": "3.4 4. Tools",
    "text": "3.4 4. Tools\nThe Tools tab provides access to various extensions and utilities that enhance the model’s capabilities. This includes: - Image generation, text processing, or code execution tools - Custom-built or third-party tools that can be integrated with your model workflows",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Crafting Your First Agent: Getting Started with Bots</span>"
    ]
  },
  {
    "objectID": "agents.html#functions",
    "href": "agents.html#functions",
    "title": "3  Crafting Your First Agent: Getting Started with Bots",
    "section": "3.5 5. Functions",
    "text": "3.5 5. Functions\nThe Functions tab allows you to define specific pipelines and actions that models can perform. It is useful for: - Creating custom workflows using functions like filters or pipelines - Setting up configurations for model actions based on user interactions",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Crafting Your First Agent: Getting Started with Bots</span>"
    ]
  },
  {
    "objectID": "agents.html#next-steps",
    "href": "agents.html#next-steps",
    "title": "3  Crafting Your First Agent: Getting Started with Bots",
    "section": "3.6 Next Steps:",
    "text": "3.6 Next Steps:\nLet’s now break down each section, starting with Models, to explore how this tab functions in more depth.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Crafting Your First Agent: Getting Started with Bots</span>"
    ]
  },
  {
    "objectID": "redefine.html",
    "href": "redefine.html",
    "title": "4  Refining Agent Behavior: Making Them Smarter",
    "section": "",
    "text": "Adjusting parameters for more effective performance\n\nTeaching your agent new tricks: Customization\nTroubleshooting common agent issues\nUsing feedback loops to improve agent responses",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Refining Agent Behavior: Making Them Smarter</span>"
    ]
  },
  {
    "objectID": "testing.html",
    "href": "testing.html",
    "title": "5  Testing Agents: Trial and Error for Perfection",
    "section": "",
    "text": "Setting up test cases for logistics scenarios\n\nRunning in-game simulations with NPC bots\nGathering feedback: How to observe agent behavior\nTweaking based on test results: Iterative improvements",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Testing Agents: Trial and Error for Perfection</span>"
    ]
  },
  {
    "objectID": "collaboration.html",
    "href": "collaboration.html",
    "title": "6  Testing Agents: Trial and Error for Perfection",
    "section": "",
    "text": "Setting up test cases for logistics scenarios\nRunning in-game simulations with NPC bots\nGathering feedback: How to observe agent behavior\nTweaking based on test results: Iterative improvements",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Testing Agents: Trial and Error for Perfection</span>"
    ]
  },
  {
    "objectID": "intergration.html",
    "href": "intergration.html",
    "title": "7  Integrating OpenWebUI into Your Workflow",
    "section": "",
    "text": "Embedding agents into serious games\nApplying OpenWebUI to supply chain and logistics research\nWorkflow automation: Using bots to handle repetitive tasks\nReal-world use cases: From theory to practice",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Integrating OpenWebUI into Your Workflow</span>"
    ]
  },
  {
    "objectID": "examples.html",
    "href": "examples.html",
    "title": "8  Real-World Examples and Case Studies",
    "section": "",
    "text": "Optimizing game dialogues with NPC agents\n\nUsing agents to simulate supply chain disruptions\nLogistics route optimization: Step-by-step case study\nApplying OpenWebUI in academic research",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Real-World Examples and Case Studies</span>"
    ]
  },
  {
    "objectID": "scaling.html",
    "href": "scaling.html",
    "title": "9  Scaling and Maintenance: Keeping Your Agents Up-to-Date",
    "section": "",
    "text": "Scaling agents for larger projects\n\nMonitoring agent performance over time\nRegular updates and maintenance for optimal performance\nHow to retire outdated agents",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Scaling and Maintenance: Keeping Your Agents Up-to-Date</span>"
    ]
  },
  {
    "objectID": "finalthoughts.html",
    "href": "finalthoughts.html",
    "title": "10  Final Thoughts and Future Potential",
    "section": "",
    "text": "The evolving role of AI in logistics and game development\n\nExpanding beyond the basics: What’s next for you?\nHow to stay updated on new OpenWebUI features\nEncouragement to keep experimenting and learning",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Final Thoughts and Future Potential</span>"
    ]
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "11  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever.",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Summary</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Knuth, Donald E. 1984. “Literate Programming.” Comput.\nJ. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97.",
    "crumbs": [
      "References"
    ]
  }
]